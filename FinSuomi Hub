--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32,v33=v1(v16,v19,v19 + (5 -3) );v19=v19 + (5 -3) ;return (v33 * (493 -237)) + v32 ;end v18=3;end if (v18==4) then function v25()local v34=v24();local v35=v24();local v36=1;local v37=(v21(v35,2 -1 ,20) * (((1481 -860) -(555 + 64))^((1313 -(87 + 263)) -(857 + 74)))) + v34 ;local v38=v21(v35,589 -(367 + 201) ,958 -((395 -181) + 713) );local v39=((v21(v35,9 + (203 -(67 + 113)) )==1) and  -(1 + 0 + 0)) or 1 ;if (v38==(0 -0)) then if (v37==(877 -(208 + 74 + 595))) then return v39 * (1637 -(1523 + 114)) ;else v38=1 + 0 ;v36=0 -0 ;end elseif (v38==(3112 -(68 + 997))) then return ((v37==((5047 -3777) -(226 + 1044))) and (v39 * ((4 -3)/(117 -(32 + (1037 -(802 + 150))))))) or (v39 * NaN) ;end return v8(v39,v38-(1003 + 20) ) * (v36 + (v37/((1 + (2 -1))^(1009 -(892 + (118 -53)))))) ;end v26=nil;function v26(v40)local v41;if  not v40 then local v82=0;while true do if (v82==(0 -0)) then v40=v24();if (v40==0) then return "";end break;end end end v41=v3(v16,v19,(v19 + v40) -((2 -1) + 0) );v19=v19 + v40 ;local v42={};for v66=998 -(915 + 82) , #v41 do v42[v66]=v2(v1(v3(v41,v66,v66)));end return v6(v42);end v18=5;end if (v18==6) then v29=nil;function v29()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v43==(867 -(550 + 317))) then local v91=0 -0 ;while true do if (v91~=(1 -0)) then else v43=1;break;end if (v91~=0) then else v44=0;v45=nil;v91=2 -1 ;end end end if ((286 -(134 + 151))~=v43) then else local v92=1665 -(970 + 695) ;local v93;while true do if (v92==(0 -0)) then v93=0;while true do if (v93==(1991 -(582 + 1408))) then v43=6 -4 ;break;end if (v93==0) then local v101=0 -0 ;while true do if (v101~=(3 -2)) then else v93=1825 -(1195 + 629) ;break;end if (0~=v101) then else v46=nil;v47=nil;v101=1 -0 ;end end end end break;end end end if (3~=v43) then else v50=nil;while true do local v94=0;while true do if (0~=v94) then else if (v44==(243 -(187 + 54))) then local v102=0;local v103;local v104;while true do if (v102~=(781 -(162 + 618))) then else while true do if (0==v103) then v104=0;while true do if (1==v104) then for v248=1,v24() do local v249=0;local v250;local v251;local v252;local v253;while true do if (v249==0) then v250=0 + 0 ;v251=nil;v249=1;end if (v249==1) then v252=nil;v253=nil;v249=2 + 0 ;end if (2~=v249) then else while true do if (v250~=0) then else v251=0;v252=nil;v250=1 -0 ;end if ((1 -0)==v250) then v253=nil;while true do if (v251==(1 + 0)) then while true do if (v252~=(1636 -(1373 + 263))) then else v253=v22();if (v21(v253,1001 -(451 + 549) ,1 + 0 )~=(0 -0)) then else local v270=0;local v271;local v272;local v273;local v274;local v275;local v276;while true do if (v270~=(4 -1)) then else while true do if (v271~=(1384 -(746 + 638))) then else local v278=0;while true do if (v278~=(1 + 0)) then else v271=1;break;end if (v278~=(0 -0)) then else v272=341 -(218 + 123) ;v273=nil;v278=1;end end end if (v271==2) then v276=nil;while true do if (v272~=0) then else v273=1581 -(1535 + 46) ;v274=nil;v272=1 + 0 ;end if (v272==2) then while true do if (v273~=3) then else if (v21(v275,1 + 2 ,563 -(306 + 254) )==(1 + 0)) then v276[7 -3 ]=v50[v276[1471 -(899 + 568) ]];end v45[v248]=v276;break;end if (v273==(0 + 0)) then local v281=0 -0 ;local v282;local v283;while true do if (v281==0) then v282=603 -(268 + 335) ;v283=nil;v281=291 -(60 + 230) ;end if (v281~=(573 -(426 + 146))) then else while true do if (v282==0) then v283=0;while true do if (v283==(0 + 0)) then v274=v21(v253,2,1459 -(282 + 1174) );v275=v21(v253,4,817 -(569 + 242) );v283=1;end if (v283~=(2 -1)) then else v273=1 + 0 ;break;end end break;end end break;end end end if (2==v273) then local v284=1024 -(706 + 318) ;local v285;while true do if (v284~=(1251 -(721 + 530))) then else v285=0;while true do if (v285==(1272 -(945 + 326))) then v273=3;break;end if (v285==0) then if (v21(v275,2 -1 ,1 + 0 )~=(701 -(271 + 429))) then else v276[2 + 0 ]=v50[v276[2]];end if (v21(v275,2,2)~=1) then else v276[1503 -(1408 + 92) ]=v50[v276[3]];end v285=1;end end break;end end end if (v273==1) then local v286=1086 -(461 + 625) ;local v287;while true do if ((1288 -(993 + 295))==v286) then v287=0 + 0 ;while true do if (v287~=0) then else local v290=0;local v291;while true do if ((1171 -(418 + 753))==v290) then v291=0;while true do if (v291==(0 + 0)) then local v296=0 + 0 ;while true do if (v296~=(1 + 0)) then else v291=1;break;end if (v296~=0) then else v276={v23(),v23(),nil,nil};if (v274==0) then local v297=1769 -(1749 + 20) ;local v298;local v299;while true do if ((0 + 0)==v297) then v298=0;v299=nil;v297=1323 -(1249 + 73) ;end if ((1 + 0)==v297) then while true do if (v298==0) then v299=1145 -(466 + 679) ;while true do if ((0 -0)==v299) then v276[3]=v23();v276[4]=v23();break;end end break;end end break;end end elseif (v274==(2 -1)) then v276[1903 -(106 + 1794) ]=v24();elseif (v274==2) then v276[1 + 2 ]=v24() -(2^16) ;elseif (v274~=(1 + 2)) then else local v302=0;local v303;while true do if (v302~=(0 -0)) then else v303=0 -0 ;while true do if ((114 -(4 + 110))==v303) then v276[3]=v24() -(2^16) ;v276[588 -(57 + 527) ]=v23();break;end end break;end end end v296=1;end end end if (v291~=(1428 -(41 + 1386))) then else v287=1;break;end end break;end end end if (1==v287) then v273=2;break;end end break;end end end end break;end if (v272==1) then local v279=103 -(17 + 86) ;while true do if (v279~=(1 + 0)) then else v272=3 -1 ;break;end if (v279==(0 -0)) then v275=nil;v276=nil;v279=1;end end end end break;end if (v271==1) then v274=nil;v275=nil;v271=2;end end break;end if (1==v270) then v273=nil;v274=nil;v270=2;end if (v270~=(166 -(122 + 44))) then else v271=0 -0 ;v272=nil;v270=1;end if (2==v270) then v275=nil;v276=nil;v270=9 -6 ;end end end break;end end break;end if (v251~=0) then else local v266=0 + 0 ;while true do if (v266~=1) then else v251=1 + 0 ;break;end if (v266==0) then v252=0 -0 ;v253=nil;v266=66 -(30 + 35) ;end end end end break;end end break;end end end v44=3;break;end if (v104~=0) then else local v236=0 + 0 ;while true do if (v236~=0) then else for v259=1258 -(1043 + 214) ,v49 do local v260=0 -0 ;local v261;local v262;local v263;while true do if (v260==(1213 -(323 + 889))) then v263=nil;while true do if (v261==1) then if (v262==(2 -1)) then v263=v22()~=0 ;elseif (v262==2) then v263=v25();elseif (v262==(583 -(361 + 219))) then v263=v26();end v50[v259]=v263;break;end if (v261==0) then local v268=0;local v269;while true do if (v268~=0) then else v269=0;while true do if (v269==(320 -(53 + 267))) then local v277=0;while true do if (v277==0) then v262=v22();v263=nil;v277=1;end if (v277==1) then v269=1 + 0 ;break;end end end if (1==v269) then v261=1;break;end end break;end end end end break;end if (v260==0) then v261=413 -(15 + 398) ;v262=nil;v260=983 -(18 + 964) ;end end end v48[11 -8 ]=v22();v236=1;end if (v236~=(1 + 0)) then else v104=1 + 0 ;break;end end end end break;end end break;end if (v102==0) then v103=850 -(20 + 830) ;v104=nil;v102=1;end end end if (3==v44) then local v105=0 + 0 ;local v106;while true do if (v105==(126 -(116 + 10))) then v106=0;while true do if (v106==0) then local v203=0 + 0 ;local v204;while true do if (v203==(738 -(542 + 196))) then v204=0;while true do if (v204==(0 -0)) then for v264=1,v24() do v46[v264-(1 + 0) ]=v29();end return v48;end end break;end end end end break;end end end v94=1 + 0 ;end if (v94~=(1 + 0)) then else if (v44==1) then local v107=0 -0 ;local v108;local v109;while true do if (1~=v107) then else while true do if ((0 -0)~=v108) then else v109=0;while true do if (v109==0) then v48={v45,v46,nil,v47};v49=v24();v109=406 -(118 + 287) ;end if (v109~=1) then else v50={};v44=7 -5 ;break;end end break;end end break;end if (v107~=0) then else v108=1121 -(118 + 1003) ;v109=nil;v107=2 -1 ;end end end if (v44==0) then local v110=377 -(142 + 235) ;local v111;while true do if (v110==(0 -0)) then v111=0 + 0 ;while true do if (v111==(978 -(553 + 424))) then v47={};v44=1;break;end if (v111~=(0 -0)) then else local v205=0 + 0 ;local v206;while true do if ((0 + 0)~=v205) then else v206=0;while true do if (v206~=(0 + 0)) then else v45={};v46={};v206=1;end if (v206~=1) then else v111=1;break;end end break;end end end end break;end end end break;end end end break;end if ((1 + 1)==v43) then v48=nil;v49=nil;v43=3;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v51)if (v1(v51,2)==79) then v20=v0(v3(v51,1,1));return "";else local v83=v2(v0(v51,16));if v20 then local v95=0;local v96;while true do if (v95==1) then return v96;end if (v95==0) then v96=v5(v83,v20);v20=nil;v95=1;end end else return v83;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v52=0 + 0 ;local v53;local v54;local v55;local v56;while true do if (v52==(1 + 0)) then return (v56 * 16777216) + (v55 * (142075 -76539)) + (v54 * (712 -456)) + v53 ;end if (v52==(0 -0)) then v53,v54,v55,v56=v1(v16,v19,v19 + 1 + 2 );v19=v19 + (19 -15) ;v52=754 -(239 + 514) ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v57,v58,v59)local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...)local v68=v60;local v69=v61;local v70=v62;local v71=v28;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v84=0,v76 do if (v84>=v70) then v74[v84-v70 ]=v75[v84 + 1 ];else v78[v84]=v75[v84 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=26) then if (v81<=12) then if (v81<=5) then if (v81<=2) then if (v81<=0) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==1) then v78[v80[2]]=v80[3]~=0 ;else v72=v80[3];end elseif (v81<=3) then local v114=v80[2];v78[v114]=v78[v114](v13(v78,v114 + 1 ,v80[3]));elseif (v81>4) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v80[3];end elseif (v81<=8) then if (v81<=6) then v78[v80[2]]={};elseif (v81==7) then do return;end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=10) then if (v81==9) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v72=v80[3];end elseif (v81>11) then local v132=0;local v133;local v134;local v135;while true do if (v132==1) then v135=v80[3];for v237=1,v135 do v134[v237]=v78[v133 + v237 ];end break;end if (v132==0) then v133=v80[2];v134=v78[v133];v132=1;end end else local v136=0;local v137;while true do if (v136==0) then v137=v80[2];v78[v137]=v78[v137](v13(v78,v137 + 1 ,v73));break;end end end elseif (v81<=19) then if (v81<=15) then if (v81<=13) then v78[v80[2]]=v59[v80[3]];elseif (v81==14) then for v207=v80[2],v80[3] do v78[v207]=nil;end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=17) then if (v81==16) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v142=0;local v143;local v144;local v145;local v146;while true do if (v142==2) then for v240=v143,v73 do local v241=0;while true do if (v241==0) then v146=v146 + 1 ;v78[v240]=v144[v146];break;end end end break;end if (v142==1) then v73=(v145 + v143) -1 ;v146=0;v142=2;end if (v142==0) then v143=v80[2];v144,v145=v71(v78[v143](v13(v78,v143 + 1 ,v80[3])));v142=1;end end end elseif (v81>18) then v78[v80[2]]=v78[v80[3]];else local v149=v80[2];v78[v149]=v78[v149]();end elseif (v81<=22) then if (v81<=20) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>21) then local v152=0;local v153;while true do if (v152==0) then v153=v80[2];v78[v153]=v78[v153](v13(v78,v153 + 1 ,v73));break;end end else local v154=v80[2];v78[v154]=v78[v154]();end elseif (v81<=24) then if (v81==23) then local v156=0;local v157;while true do if (v156==0) then v157=v80[2];v78[v157](v13(v78,v157 + 1 ,v80[3]));break;end end else v59[v80[3]]=v78[v80[2]];end elseif (v81==25) then v78[v80[2]][v80[3]]=v80[4];else local v162=v80[2];v78[v162](v78[v162 + 1 ]);end elseif (v81<=40) then if (v81<=33) then if (v81<=29) then if (v81<=27) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>28) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v164=v80[2];local v165=v78[v80[3]];v78[v164 + 1 ]=v165;v78[v164]=v165[v80[4]];end elseif (v81<=31) then if (v81>30) then local v169=0;local v170;local v171;while true do if (v169==1) then for v242=v170 + 1 ,v80[3] do v7(v171,v78[v242]);end break;end if (v169==0) then v170=v80[2];v171=v78[v170];v169=1;end end else v78[v80[2]]=v30(v69[v80[3]],nil,v59);end elseif (v81>32) then v78[v80[2]]= not v78[v80[3]];else local v174=0;local v175;while true do if (v174==0) then v175=v80[2];v78[v175](v78[v175 + 1 ]);break;end end end elseif (v81<=36) then if (v81<=34) then local v119=v80[2];v78[v119]=v78[v119](v78[v119 + 1 ]);elseif (v81>35) then v78[v80[2]]();else local v176=v80[2];v78[v176]=v78[v176](v13(v78,v176 + 1 ,v80[3]));end elseif (v81<=38) then if (v81>37) then v78[v80[2]]=v59[v80[3]];else local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==0) then v181=v80[2];v182,v183=v71(v78[v181](v13(v78,v181 + 1 ,v80[3])));v180=1;end if (v180==1) then v73=(v183 + v181) -1 ;v184=0;v180=2;end if (v180==2) then for v243=v181,v73 do local v244=0;while true do if (v244==0) then v184=v184 + 1 ;v78[v243]=v182[v184];break;end end end break;end end end elseif (v81==39) then v78[v80[2]]=v80[3];else local v187=0;local v188;local v189;local v190;while true do if (v187==1) then v190=v80[3];for v245=1,v190 do v189[v245]=v78[v188 + v245 ];end break;end if (v187==0) then v188=v80[2];v189=v78[v188];v187=1;end end end elseif (v81<=47) then if (v81<=43) then if (v81<=41) then v78[v80[2]]=v78[v80[3]];elseif (v81>42) then v78[v80[2]]();else local v191=0;local v192;local v193;while true do if (v191==1) then v78[v192 + 1 ]=v193;v78[v192]=v193[v80[4]];break;end if (v191==0) then v192=v80[2];v193=v78[v80[3]];v191=1;end end end elseif (v81<=45) then if (v81>44) then v59[v80[3]]=v78[v80[2]];else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81==46) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else for v209=v80[2],v80[3] do v78[v209]=nil;end end elseif (v81<=50) then if (v81<=48) then v78[v80[2]]=v30(v69[v80[3]],nil,v59);elseif (v81==49) then v78[v80[2]]= not v78[v80[3]];else local v199=v80[2];v78[v199](v13(v78,v199 + 1 ,v80[3]));end elseif (v81<=52) then if (v81>51) then do return;end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>53) then local v200=v80[2];v78[v200]=v78[v200](v78[v200 + 1 ]);else v78[v80[2]]={};end v72=v72 + 1 ;end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v63,v64,v65)if v65 then local v87=(1665 -(144 + 192)) -((1013 -(42 + 174)) + 532) ;local v88;while true do if (v87==(0 + 0)) then v88=(v63/((1 + 1)^(v64-(2 -1))))%((1204 -(373 + 829))^(((v65-1) -(v64-(732 -(476 + 255)))) + (1131 -(369 + 761)))) ;return v88-(v88%(1 + 0)) ;end end else local v89=0 -0 ;local v90;while true do if ((0 -0)==v89) then v90=(240 -(49 + 15 + 174))^(v64-(1 + 0)) ;return (((v63%(v90 + v90))>=v90) and 1) or (0 -(0 + 0)) ;end end end end v22=nil;v18=2;end end end v15("LOL!",v9(),...);
