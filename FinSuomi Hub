--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v98=v5(v82,v19);v19=nil;return v98;else return v82;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v83=(v31/(2^(v32-(878 -(282 + 595)))))%((5 -3)^(((v33-(2 -1)) -(v32-((1638 -(1523 + 114)) -0))) + 1)) ;return v83-(v83%(2 -1)) ;else local v84=619 -(555 + 64) ;local v85;while true do if (v84==((837 + 94) -(857 + 74))) then v85=((812 -242) -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 + 0) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23()local v37=117 -(32 + 85) ;local v38;local v39;local v40;local v41;while true do if (v37==((1 -0) + 0)) then return (v41 * (3720433 + 13056783)) + (v40 * 65536) + (v39 * (1213 -(892 + 65))) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + 4 ;v37=(351 -(87 + 263)) -0 ;end end end local function v24()local v42=(622 -(416 + 26)) -(67 + 113) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==0) then v43=v23();v44=v23();v42=1 + 0 ;end if (v42==(7 -4)) then if (v47==0) then if (v46==0) then return v48 * (0 + 0) ;else v47=1;v45=0 -0 ;end elseif (v47==(2999 -((2560 -1758) + 150))) then return ((v46==0) and (v48 * ((2 -(1 + 0))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(745 + 278) ) * (v45 + (v46/((999 -((1618 -703) + 82))^(147 -95)))) ;end if (v42==(2 + 0)) then v47=v20(v44,459 -(145 + 293) ,40 -(439 -(44 + 386)) );v48=((v20(v44,1219 -(1069 + 118) )==(2 -1)) and  -1) or (1 -0) ;v42=(1487 -(998 + 488)) + 2 ;end if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,(252 + 540) -(368 + 423) ,(51 + 11) -42 ) * (2^(50 -(10 + 8)))) + v43 ;v42=7 -5 ;end end end local function v25(v49)local v50=772 -(201 + 571) ;local v51;local v52;while true do if (v50==(1140 -(7 + 109 + 1022))) then v52={};for v90=1, #v51 do v52[v90]=v2(v1(v3(v51,v90,v90)));end v50=3;end if (v50==(0 -0)) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=3 -2 ;end if (v50==(10 -7)) then return v6(v52);end if (v50==((304 + 556) -(814 + 45))) then v51=v3(v16,v18,(v18 + v49) -(2 -1) );v18=v18 + v49 ;v50=2;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v53~=1) then else v56=nil;v57=nil;v53=405 -(320 + 83) ;end if (v53~=(1878 -(332 + 1546))) then else v54=1384 -(746 + 638) ;v55=nil;v53=1 + 0 ;end if ((2 -0)~=v53) then else local v89=341 -(218 + 123) ;while true do if (v89==(1581 -(1535 + 46))) then v58=nil;v59=nil;v89=1 + 0 ;end if (v89==(1 + 0)) then v53=3;break;end end end if (v53==3) then v60=nil;while true do local v92=0;local v93;while true do if (v92==(560 -(306 + 254))) then v93=0 + 0 ;while true do if (v93~=(0 -0)) then else local v99=0;while true do if (v99==(1468 -(899 + 568))) then v93=1;break;end if (v99==0) then if (v54==3) then local v195=0;while true do if (v195~=(0 + 0)) then else for v238=2 -1 ,v23() do v56[v238-(604 -(268 + 335)) ]=v28();end return v58;end end end if ((290 -(60 + 230))==v54) then local v196=0;while true do if (v196==1) then v57={};v54=573 -(426 + 146) ;break;end if (v196~=0) then else v55={};v56={};v196=1;end end end v99=1 + 0 ;end end end if (v93==(1457 -(282 + 1174))) then if (v54==(813 -(569 + 242))) then local v100=0;local v101;while true do if (0==v100) then v101=0 -0 ;while true do if (v101==(0 + 0)) then local v229=0;while true do if (v229~=0) then else for v246=1,v59 do local v247=0;local v248;local v249;local v250;while true do if (v247==(1024 -(706 + 318))) then v248=1251 -(721 + 530) ;v249=nil;v247=1;end if (v247~=1) then else v250=nil;while true do if (v248~=(1271 -(945 + 326))) then else local v252=0;while true do if (v252==(0 -0)) then v249=v21();v250=nil;v252=1;end if (v252~=1) then else v248=1;break;end end end if (1~=v248) then else if (v249==(1 + 0)) then v250=v21()~=(700 -(271 + 429)) ;elseif (v249==2) then v250=v24();elseif (v249==3) then v250=v25();end v60[v246]=v250;break;end end break;end end end v58[3]=v21();v229=1;end if ((1 + 0)~=v229) then else v101=1501 -(1408 + 92) ;break;end end end if (v101==(1087 -(461 + 625))) then for v240=1289 -(993 + 295) ,v23() do local v241=0 + 0 ;local v242;local v243;local v244;while true do if (v241~=0) then else v242=1171 -(418 + 753) ;v243=nil;v241=1;end if ((1 + 0)==v241) then v244=nil;while true do if (v242==(1 + 0)) then while true do if ((0 + 0)==v243) then v244=v21();if (v20(v244,1,1)==0) then local v254=0;local v255;local v256;local v257;local v258;local v259;while true do if (v254==1) then v257=nil;v258=nil;v254=1 + 1 ;end if (2~=v254) then else v259=nil;while true do if (v255==(529 -(406 + 123))) then v256=0;v257=nil;v255=1;end if ((1770 -(1749 + 20))==v255) then local v260=0;while true do if (v260==(1 + 0)) then v255=1324 -(1249 + 73) ;break;end if (0==v260) then v258=nil;v259=nil;v260=1;end end end if (v255==(1 + 1)) then while true do if (v256==(1148 -(466 + 679))) then if (v20(v258,6 -3 ,3)==1) then v259[11 -7 ]=v60[v259[1904 -(106 + 1794) ]];end v55[v240]=v259;break;end if ((0 + 0)==v256) then local v262=0 + 0 ;local v263;while true do if (v262~=(0 -0)) then else v263=0 -0 ;while true do if (v263~=0) then else local v270=0;while true do if ((114 -(4 + 110))~=v270) then else v257=v20(v244,586 -(57 + 527) ,3);v258=v20(v244,1431 -(41 + 1386) ,109 -(17 + 86) );v270=1 + 0 ;end if (v270==1) then v263=1 -0 ;break;end end end if (v263~=(2 -1)) then else v256=1;break;end end break;end end end if (v256==(168 -(122 + 44))) then local v264=0;local v265;while true do if (v264==0) then v265=0;while true do if (v265==(0 -0)) then local v271=0;while true do if ((3 -2)==v271) then v265=1 + 0 ;break;end if (v271==0) then if (v20(v258,1,1)==(1 + 0)) then v259[2]=v60[v259[2]];end if (v20(v258,2,2)==(1 -0)) then v259[3]=v60[v259[68 -(30 + 35) ]];end v271=1 + 0 ;end end end if (1==v265) then v256=1260 -(1043 + 214) ;break;end end break;end end end if (v256~=(3 -2)) then else local v266=0;local v267;while true do if (v266~=(1212 -(323 + 889))) then else v267=0;while true do if (v267==(0 -0)) then local v272=580 -(361 + 219) ;while true do if (v272==0) then v259={v22(),v22(),nil,nil};if (v257==0) then local v277=0 + 0 ;local v278;while true do if ((413 -(15 + 398))==v277) then v278=0;while true do if (v278~=(982 -(18 + 964))) then else v259[3]=v22();v259[4]=v22();break;end end break;end end elseif (v257==1) then v259[3]=v23();elseif (v257==(7 -5)) then v259[2 + 1 ]=v23() -(2^(11 + 5)) ;elseif (v257==(853 -(20 + 830))) then local v283=0;local v284;local v285;while true do if (v283==(0 + 0)) then v284=0;v285=nil;v283=1;end if (v283==(127 -(116 + 10))) then while true do if (v284~=(0 + 0)) then else v285=0;while true do if (0~=v285) then else v259[3]=v23() -((740 -(542 + 196))^(34 -18)) ;v259[4]=v22();break;end end break;end end break;end end end v272=1;end if (v272~=(1 + 0)) then else v267=1 + 0 ;break;end end end if (v267==1) then v256=1 + 1 ;break;end end break;end end end end break;end end break;end if (0==v254) then v255=0 -0 ;v256=nil;v254=2 -1 ;end end end break;end end break;end if ((1551 -(1126 + 425))==v242) then local v251=405 -(118 + 287) ;while true do if (v251~=0) then else v243=0;v244=nil;v251=3 -2 ;end if (v251==1) then v242=1122 -(118 + 1003) ;break;end end end end break;end end end v54=3;break;end end break;end end end if (v54==(2 -1)) then local v102=377 -(142 + 235) ;local v103;while true do if (v102~=(0 -0)) then else v103=0 + 0 ;while true do if (v103==(978 -(553 + 424))) then v60={};v54=2;break;end if (v103==0) then v58={v55,v56,nil,v57};v59=v23();v103=1;end end break;end end end break;end end break;end end end break;end end end local function v29(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v67=v64;local v68=v65;local v69=v66;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v86=0,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + 1 ];else v77[v86]=v74[v86 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=26) then if (v80<=12) then if (v80<=5) then if (v80<=2) then if (v80<=0) then local v104=v79[2];local v105=v77[v104];for v115=v104 + 1 ,v79[3] do v7(v105,v77[v115]);end elseif (v80>1) then v77[v79[2]]={};else do return;end end elseif (v80<=3) then v77[v79[2]][v79[3]]=v79[4];elseif (v80>4) then local v119=v79[2];v77[v119]=v77[v119](v13(v77,v119 + 1 ,v72));else local v121=0;local v122;while true do if (v121==0) then v122=v79[2];v77[v122](v77[v122 + 1 ]);break;end end end elseif (v80<=8) then if (v80<=6) then local v108=v79[2];v77[v108]=v77[v108](v13(v77,v108 + 1 ,v79[3]));elseif (v80==7) then v77[v79[2]]=v79[3]~=0 ;elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=10) then if (v80>9) then local v124=v79[2];local v125=v77[v79[3]];v77[v124 + 1 ]=v125;v77[v124]=v125[v79[4]];else local v129=v79[2];v77[v129]=v77[v129](v13(v77,v129 + 1 ,v79[3]));end elseif (v80>11) then v77[v79[2]]=v29(v68[v79[3]],nil,v63);elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=19) then if (v80<=15) then if (v80<=13) then do return;end elseif (v80>14) then local v132=0;local v133;while true do if (v132==0) then v133=v79[2];v77[v133](v13(v77,v133 + 1 ,v79[3]));break;end end else local v134=0;local v135;local v136;local v137;while true do if (v134==1) then v137=v79[3];for v230=1,v137 do v136[v230]=v77[v135 + v230 ];end break;end if (0==v134) then v135=v79[2];v136=v77[v135];v134=1;end end end elseif (v80<=17) then if (v80>16) then v77[v79[2]]=v29(v68[v79[3]],nil,v63);else local v139=0;local v140;while true do if (v139==0) then v140=v79[2];v77[v140]=v77[v140]();break;end end end elseif (v80>18) then v77[v79[2]][v79[3]]=v79[4];else v77[v79[2]]= not v77[v79[3]];end elseif (v80<=22) then if (v80<=20) then v77[v79[2]]=v79[3];elseif (v80>21) then local v144=v79[2];v77[v144]=v77[v144](v13(v77,v144 + 1 ,v72));else v71=v79[3];end elseif (v80<=24) then if (v80==23) then v77[v79[2]][v79[3]]=v77[v79[4]];else local v149=v79[2];v77[v149](v77[v149 + 1 ]);end elseif (v80==25) then local v150=0;local v151;while true do if (v150==0) then v151=v79[2];v77[v151](v13(v77,v151 + 1 ,v79[3]));break;end end else v77[v79[2]]();end elseif (v80<=40) then if (v80<=33) then if (v80<=29) then if (v80<=27) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>28) then v63[v79[3]]=v77[v79[2]];else local v155=0;local v156;while true do if (v155==0) then v156=v79[2];v77[v156]=v77[v156](v77[v156 + 1 ]);break;end end end elseif (v80<=31) then if (v80>30) then local v157=v79[2];local v158,v159=v70(v77[v157](v13(v77,v157 + 1 ,v79[3])));v72=(v159 + v157) -1 ;local v160=0;for v197=v157,v72 do local v198=0;while true do if (v198==0) then v160=v160 + 1 ;v77[v197]=v158[v160];break;end end end else local v161=0;local v162;local v163;while true do if (v161==1) then v77[v162 + 1 ]=v163;v77[v162]=v163[v79[4]];break;end if (v161==0) then v162=v79[2];v163=v77[v79[3]];v161=1;end end end elseif (v80==32) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=36) then if (v80<=34) then v63[v79[3]]=v77[v79[2]];elseif (v80==35) then if v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end else local v164=v79[2];local v165=v77[v164];local v166=v79[3];for v199=1,v166 do v165[v199]=v77[v164 + v199 ];end end elseif (v80<=38) then if (v80>37) then local v167=0;local v168;while true do if (v167==0) then v168=v79[2];v77[v168]=v77[v168]();break;end end else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80>39) then v77[v79[2]]=v63[v79[3]];else v77[v79[2]]=v79[3]~=0 ;end elseif (v80<=47) then if (v80<=43) then if (v80<=41) then for v116=v79[2],v79[3] do v77[v116]=nil;end elseif (v80==42) then v77[v79[2]]=v63[v79[3]];else v77[v79[2]]=v77[v79[3]];end elseif (v80<=45) then if (v80>44) then v77[v79[2]]();else local v178=0;local v179;while true do if (v178==0) then v179=v79[2];v77[v179]=v77[v179](v77[v179 + 1 ]);break;end end end elseif (v80>46) then v77[v79[2]]=v77[v79[3]];else v77[v79[2]]=v79[3];end elseif (v80<=50) then if (v80<=48) then v77[v79[2]]={};elseif (v80>49) then local v184=0;local v185;local v186;local v187;local v188;while true do if (v184==2) then for v235=v185,v72 do v188=v188 + 1 ;v77[v235]=v186[v188];end break;end if (v184==0) then v185=v79[2];v186,v187=v70(v77[v185](v13(v77,v185 + 1 ,v79[3])));v184=1;end if (v184==1) then v72=(v187 + v185) -1 ;v188=0;v184=2;end end else v77[v79[2]]= not v77[v79[3]];end elseif (v80<=52) then if (v80==51) then v71=v79[3];else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80==53) then for v202=v79[2],v79[3] do v77[v202]=nil;end else v77[v79[2]]=v77[v79[3]][v79[4]];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
